version: '3'

volumes:
  keycloak-db-data:
    driver: local

services:
  postgres:
    image: postgres:13.7
    container_name: postgres
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: my_keycloak
      POSTGRES_PASSWORD: My863Keycloak

  keycloak:
    build: .
    container_name: custom-auth-service
    environment:
      KC_HOSTNAME_STRICT: 'false'
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: MyKeycloak493
      KC_DB_URL: 'jdbc:postgresql://postgres/keycloak'
      KC_DB_USERNAME: my_keycloak
      KC_DB_PASSWORD: My863Keycloak
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      KC_HOSTNAME: localhost
      PROXY_ADDRESS_FORWARDING: "true"
      KC_SPI_THEME_DEFAULT: 'my-theme'
    command:
      - start 
      - --optimized
    ports:
      - 8443:8443
      - 8080:8080
    depends_on:
      - postgres

# # docker-compose -f docker-compose-keycloak.yml up -d
# services:
#   keycloak:
#     image: quay.io/keycloak/keycloak:24.0.3
#     command: start-dev # start-dev = development, start = production
#     environment:
#       - KC_DB=${KC_DB}
#       - KC_DB_URL_HOST=${KC_DB_URL_HOST}
#       - KC_DB_URL_DATABASE=${KC_DB_URL_DATABASE}
#       - KC_DB_PASSWORD=${KC_DB_PASSWORD}
#       - KC_DB_USERNAME=${KC_DB_USERNAME}
#       - KC_DB_SCHEMA=${KC_DB_SCHEMA}
#       - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
#       - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
#       - KC_LOG_LEVEL=INFO
#       - KC_PROXY=edge
#       - KC_HTTP_ENABLED=true
#       # - KC_HOSTNAME_STRICT_HTTPS=false
#       - KC_HOSTNAME_STRICT=false
#       # - KC_PROXY_ADDRESS_FORWARDING=true
#       # - KC_HOSTNAME_STRICT_BACKCHANNEL=true
#       # - KC_HOSTNAME=34.27.44.220:8890
#       - KC_PROXY_HEADERS=xforwarded
#       # - KC_HTTP_RELATIVE_PATH=/
#     ports:
#       - "8890:8080"
#     depends_on:
#       keycloakdb:
#         condition: service_healthy
#     # volumes:
#     #   - ./docker-nginx/nginx.conf:/etc/nginx/nginx.conf/:ro
#     #   - ./certbot/www:/var/www/certbot/:ro
#     #   - ./certbot/conf/:/etc/nginx/ssl/:ro
#     restart: unless-stopped
#     networks:
#       - keycloak-network

#   keycloakdb:
#     image: postgres:latest
#     command: postgres -c 'max_connections=200'
#     volumes:
#       - keycloak_data:/var/lib/postgresql/data  # Added mount target
#     environment:
#       - POSTGRES_DB=${KEYCLOAK_POSTGRES_DB}
#       - POSTGRES_USER=${KEYCLOAK_POSTGRES_USER}
#       - POSTGRES_PASSWORD=${KEYCLOAK_POSTGRES_PASSWORD}
#     healthcheck:
#       test: "exit 0"
#     ports:
#       - "5436:5432"
#     restart: unless-stopped
#     networks:
#       - keycloak-network

# volumes:
#   keycloak_data:

# networks:
#   keycloak-network: